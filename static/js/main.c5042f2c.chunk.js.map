{"version":3,"sources":["images/Black-cat-asks-logo.png","images/play.png","redux/reducers/player.js","redux/action/index.js","redux/reducers/token.js","redux/reducers/index.js","redux/store/index.js","services/localStorage.js","services/servicesFetchAPI.js","pages/Login.js","pages/Settings.js","component/Header.js","component/Question.js","pages/Play.js","pages/Ranking.js","pages/Feedback.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","INITIAL_STATE","name","assertions","score","gravatarEmail","player","state","action","type","payload","email","token","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","setLocalStorage","key","localStorage","setItem","fetchToken","fetch","then","response","json","data","fetchAPI","results","Login","isDisabled","handleChange","bind","handleClick","validateInput","target","value","this","setState","test","String","toLowerCase","length","a","props","history","login","tokenValidate","push","className","width","src","blackCatLogo","alt","htmlFor","data-testid","placeholder","id","onChange","onClick","disabled","Component","connect","dispatch","loginAction","responseTokenAPI","Settings","Header","hash","md5Converter","md5","toString","href","rel","to","activeStyle","textDecoration","Question","alternatives","seconds","clicked","disabledButton","alternativesQuestions","changeColor","regressTimer","stopTime","assertionQuestions","levelQuestion","questionScore","changeDisplayVisible","handleNextClick","clickedAnswer","prevProps","question","interval","setInterval","clearInterval","Object","keys","answers","incorrect_answers","map","incorrect","index","Math","floor","random","correct_answer","sort","b","document","querySelectorAll","forEach","classList","toggle","difficulty","points","assert","style","backgroundColor","console","log","querySelector","visibility","nextQuestion","category","text","testid","pointsPlayer","assertionsPlayer","Play","questions","render","actualQuestion","getReponseAPI","changeDisplayHidden","response_code","newToken","newQuestions","play","Ranking","Feedback","App","basename","process","exact","path","component","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5042f2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Black-cat-asks-logo.d7a90d8c.png\";","module.exports = __webpack_public_path__ + \"static/media/play.5f9233ce.png\";","import { LOGIN, POINTS_PLAYER, ASSERTIONS_PLAYER } from '../action';\n\nconst INITIAL_STATE = {\n  name: '',\n  assertions: 0,\n  score: 0,\n  gravatarEmail: '',\n};\n\nconst player = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOGIN:\n    return {\n      ...state,\n      name: action.payload.name,\n      gravatarEmail: action.payload.email,\n    };\n  case POINTS_PLAYER:\n    return {\n      ...state,\n      score: state.score + action.payload,\n    };\n  case ASSERTIONS_PLAYER:\n    return {\n      ...state,\n      assertions: state.assertions + action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default player;\n","export const LOGIN = 'LOGIN';\nexport const RESPONSE_TOKEN_API = 'RESPONSE_TOKEN_API';\nexport const POINTS_PLAYER = 'POINTS_PLAYER';\nexport const ASSERTIONS_PLAYER = 'ASSERTIONS_PLAYER';\n\nexport const loginAction = (payload) => ({ type: LOGIN, payload });\nexport const responseTokenAPI = (payload) => ({ type: RESPONSE_TOKEN_API, payload });\nexport const pointsPlayer = (payload) => ({ type: POINTS_PLAYER, payload });\nexport const assertionsPlayer = (payload) => ({ type: ASSERTIONS_PLAYER, payload });\n","import { RESPONSE_TOKEN_API } from '../action';\n\nconst INITIAL_STATE = '';\n\nfunction token(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case RESPONSE_TOKEN_API:\n    return action.payload;\n  default:\n    return state;\n  }\n}\n\nexport default token;\n","import { combineReducers } from 'redux';\nimport player from './player';\nimport token from './token';\n\nconst rootReducer = combineReducers({ player, token });\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","export const setLocalStorage = (key, token) => localStorage.setItem(key, token);\n// setItem(chave, value) => adiciona um item\nexport const getLocalStorage = () => localStorage.getItem('token');\n// getItem(nomeDaChave) => retorna o valor da chave\n","export const fetchToken = () => fetch('https://opentdb.com/api_token.php?command=request')\n  .then((response) => response.json())\n  .then((data) => data.token);\n\nexport const fetchAPI = (token) => fetch(`https://opentdb.com/api.php?amount=5&token=${token}`)\n  .then((response) => response.json())\n  .then((data) => data.results);\n\n// https://opentdb.com/api.php?amount=5&token=c55f9ee1436ed5562b2f46ad92ab974240cbe223d5602284a1dc968e32120ab9\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { responseTokenAPI, loginAction } from '../redux/action';\nimport { setLocalStorage } from '../services/localStorage';\nimport { fetchToken } from '../services/servicesFetchAPI';\nimport './Login.css';\nimport blackCatLogo from '../images/Black-cat-asks-logo.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      isDisabled: 'true',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.validateInput = this.validateInput.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, this.validateInput);\n  }\n\n  validateInput() {\n    const { email, name } = this.state;\n    // Regex Valida E-mail: https://pt.stackoverflow.com/questions/1386/express%C3%A3o-regular-para-valida%C3%A7%C3%A3o-de-e-mail\n    const regexValidateEmail = /^[a-z0-9.]+@[a-z0-9]+\\.[a-z]+\\.?$/i;\n    const emailValidate = regexValidateEmail.test(String(email).toLowerCase());\n    return (emailValidate && name.length !== 0)\n      ? this.setState({ isDisabled: false })\n      : this.setState({ isDisabled: true });\n  }\n\n  async handleClick() {\n    const { history, token, login } = this.props;\n    const tokenValidate = await fetchToken();\n    login(this.state);\n    token(tokenValidate);\n    setLocalStorage('token', tokenValidate);\n    history.push('/play');\n  }\n\n  render() {\n    const { name, email, isDisabled } = this.state;\n    const { history } = this.props;\n    return (\n      <div className=\"main-login\">\n        <form className=\"form\">\n          <div><img width=\"300px\" src={ blackCatLogo } alt=\"logo\" /></div>\n          <label htmlFor=\"name\">\n            Nome:\n            <input\n              // autoComplete=\"off\"\n              type=\"text\"\n              data-testid=\"input-player-name\"\n              placeholder=\"Nome\"\n              name=\"name\"\n              id=\"name\"\n              value={ name }\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"email\">\n            Email:\n            <input\n              // autoComplete=\"off\"\n              type=\"text\"\n              data-testid=\"input-gravatar-email\"\n              placeholder=\"example@email.com\"\n              name=\"email\"\n              id=\"email\"\n              value={ email }\n              onChange={ this.handleChange }\n            />\n          </label>\n          <button\n            className=\"btn-play\"\n            type=\"button\"\n            data-testid=\"btn-play\"\n            onClick={ this.handleClick }\n            disabled={ isDisabled }\n          >\n            Play\n          </button>\n          <button\n            className=\"btn-settings\"\n            type=\"button\"\n            data-testid=\"btn-settings\"\n            onClick={ () => history.push('/settings') }\n          >\n            Settings\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (payload) => dispatch(loginAction(payload)),\n  token: (payload) => dispatch(responseTokenAPI(payload)),\n});\n\nLogin.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n  login: PropTypes.func.isRequired,\n  token: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\n\nexport class Settings extends Component {\n  render() {\n    return (\n      <div>\n        <h1 data-testid=\"settings-title\">Página do Settings</h1>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './Header.css';\nimport { NavLink } from 'react-router-dom';\n\nexport class Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hash: '',\n    };\n    this.md5Converter = this.md5Converter.bind(this);\n  }\n\n  componentDidMount() {\n    this.md5Converter();\n  }\n\n  md5Converter() {\n    const { email } = this.props;\n    const hash = md5(email).toString();\n    this.setState({\n      hash,\n    });\n  }\n\n  render() {\n    const { hash } = this.state;\n    const { name, score } = this.props;\n    return (\n      <div>\n        <link href=\"https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap\" rel=\"stylesheet\" />\n        <header className=\"header\">\n          <div className=\"title-div\">\n            <NavLink to=\"/\" activeStyle={ { textDecoration: 'none' } }>\n              <h1 className=\"title-game\" textDecoration=\"none\">Black Cat Asks...</h1>\n            </NavLink>\n          </div>\n          <div className=\"infos\">\n            <img className=\"image\" src={ `https://www.gravatar.com/avatar/${hash}` } data-testid=\"header-profile-picture\" alt={ name } />\n            <p className=\"name\" data-testid=\"header-player-name\">{name}</p>\n            <p data-testid=\"header-score\">{ score }</p>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  name: state.player.name,\n  email: state.player.gravatarEmail,\n  score: state.player.score,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  score: PropTypes.number.isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { pointsPlayer, assertionsPlayer } from '../redux/action';\nimport './Question.css';\n\nconst milliseconds = 1000;\nconst correctAnswer = 'correct-answer';\nconst numeroTres = 3;\nconst numeroDez = 10;\n\nexport class Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      alternatives: [],\n      seconds: 30,\n      clicked: false,\n      disabledButton: false,\n      assertions: 0,\n      // score: 0,\n    };\n    this.alternativesQuestions = this.alternativesQuestions.bind(this);\n    this.changeColor = this.changeColor.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.regressTimer = this.regressTimer.bind(this);\n    this.stopTime = this.stopTime.bind(this);\n    this.assertionQuestions = this.assertionQuestions.bind(this);\n    this.levelQuestion = this.levelQuestion.bind(this);\n    this.questionScore = this.questionScore.bind(this);\n    this.changeDisplayVisible = this.changeDisplayVisible.bind(this);\n    this.handleNextClick = this.handleNextClick.bind(this);\n    this.clickedAnswer = this.clickedAnswer.bind(this);\n  }\n\n  componentDidMount() {\n    this.alternativesQuestions();\n    this.regressTimer();\n  }\n\n  // Lógica grupo Gabriel Fontes\n  componentDidUpdate(prevProps) {\n    const { question } = this.props;\n    if (prevProps.question !== question) {\n      this.alternativesQuestions();\n    }\n  }\n\n  // Lógica para o cronometro para responder as perguntas:\n  regressTimer() {\n    const interval = setInterval(() => {\n      const { seconds, clicked } = this.state;\n      if (seconds === 1 || clicked === true) {\n        this.setState({\n          disabledButton: true,\n        });\n        return clearInterval(interval);\n      }\n      this.setState({\n        seconds: seconds - 1,\n      });\n    }, milliseconds);\n  }\n\n  // Lógica grupo Gabriel Fontes sobre respostas na aplicação\n  // Lógica para gerar randomicamente as respostas\n  alternativesQuestions() {\n    const { question } = this.props;\n    // console.log(question);\n    if (Object.keys(question).length > 0) {\n      const answers = question.incorrect_answers\n        .map((incorrect, index) => [incorrect, `wrong-answer-${index}`,\n          Math.floor(Math.random() * (100 - 1)) + 1]);\n      const results = [...answers, [question.correct_answer, correctAnswer,\n        Math.floor(Math.random() * (100 - 1)) + 1]];\n      const alternatives = results.sort((a, b) => a[2] - b[2]);\n      this.setState({ alternatives });\n    }\n  }\n\n  // Lógica para mudar a cor da resposta:\n  changeColor() {\n    const button = document.querySelectorAll('.answers');\n    button.forEach((alternatives) => {\n      alternatives.classList\n        .toggle(alternatives.name === correctAnswer ? 'correct' : 'incorrect');\n    });\n  }\n\n  // Lógica para score do game, pontuação:\n  levelQuestion() {\n    const { question } = this.props;\n    // console.log(question);\n    if (question.difficulty === 'medium') {\n      return 2;\n    }\n    if (question.difficulty === 'hard') {\n      return numeroTres;\n    }\n    return 1;\n  }\n\n  questionScore() {\n    const { seconds } = this.state;\n    const { points } = this.props;\n    const levelQuestionReturn = this.levelQuestion();\n    const calculatePoints = numeroDez + (levelQuestionReturn * seconds);\n    points(calculatePoints);\n  }\n\n  stopTime() {\n    this.setState({\n      clicked: true,\n    });\n  }\n\n  assertionQuestions() {\n    const { assertions } = this.state;\n    const { assert } = this.props;\n    this.setState({ assertions: assertions + 1 }, () => assert(assertions));\n  }\n\n  clickedAnswer(target) {\n    target.style.backgroundColor = 'yellow';\n    console.log(target);\n  }\n\n  handleClick({ target }) {\n    this.changeColor();\n    this.stopTime();\n    if (target.name === correctAnswer) {\n      this.questionScore();\n      this.assertionQuestions();\n    } else {\n      this.clickedAnswer(target);\n    }\n    this.changeDisplayVisible();\n  }\n\n  changeDisplayVisible() {\n    const nextButton = document.querySelector('.next-button');\n    nextButton.style.visibility = 'visible';\n  }\n\n  handleNextClick() {\n    const { nextQuestion } = this.props;\n    nextQuestion();\n    this.setState({\n      alternatives: [],\n      seconds: 30,\n      clicked: false,\n      disabledButton: false,\n    });\n    this.regressTimer();\n  }\n\n  render() {\n    const { question } = this.props;\n    const { alternatives, disabledButton, seconds } = this.state;\n    return (\n      <main className=\"main-container\">\n        <div className=\"container-question\">\n          <p\n            className=\"question-category\"\n            data-testid=\"question-category\"\n          >\n            {question.category}\n\n          </p>\n          <p className=\"question-text\" data-testid=\"question-text\">{question.question}</p>\n        </div>\n        <div data-testid=\"answer-options\" className=\"container-answer\">\n          {\n            alternatives.map(([text, testid], index) => (\n              <button\n                className=\"answers\"\n                type=\"button\"\n                key={ index }\n                name={ testid }\n                data-testid={ testid }\n                disabled={ disabledButton }\n                onClick={ this.handleClick }\n                id={ testid }\n              >\n                {text}\n              </button>\n            ))\n          }\n        </div>\n        <div className=\"timer-link\">\n          <p>{ `Timer: ${seconds}` }</p>\n          <Link to=\"/feedback\" className=\"feedback\">Feedback</Link>\n        </div>\n        <button\n          className=\"next-button\"\n          type=\"button\"\n          data-testid=\"btn-next\"\n          onClick={ this.handleNextClick }\n        >\n          Next\n        </button>\n      </main>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  points: (payload) => dispatch(pointsPlayer(payload)),\n  assert: (payload) => dispatch(assertionsPlayer(payload)),\n});\n\nQuestion.propTypes = {\n  question: PropTypes.string.isRequired,\n  points: PropTypes.func.isRequired,\n  assert: PropTypes.func.isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Question);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../component/Header';\nimport Question from '../component/Question';\nimport { fetchAPI, fetchToken } from '../services/servicesFetchAPI';\nimport play from '../images/play.png';\nimport './Play.css';\n\nclass Play extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      questions: [],\n      render: false,\n      actualQuestion: 0,\n    };\n\n    this.getReponseAPI = this.getReponseAPI.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.changeDisplayHidden = this.changeDisplayHidden.bind(this);\n  }\n\n  componentDidMount() {\n    this.getReponseAPI();\n  }\n\n  // Lógica grupo Gabriel Fontes:\n  // validar se o token está válido:\n  async getReponseAPI() {\n    const { token } = this.props;\n    const questions = await fetchAPI(token);\n    if (questions.response_code === 0) {\n      this.setState({ questions, render: true });\n    } else {\n      const newToken = await fetchToken();\n      const newQuestions = await fetchAPI(newToken);\n      this.setState({ questions: newQuestions, render: true });\n    }\n  }\n\n  nextQuestion() {\n    const { history } = this.props;\n    const { actualQuestion, questions } = this.state;\n    if (actualQuestion === questions.length - 1) {\n      history.push('/feedback');\n    } else {\n      this.setState({\n        actualQuestion: actualQuestion + 1,\n      });\n    }\n    this.changeDisplayHidden();\n  }\n\n  changeDisplayHidden() {\n    const nextButton = document.querySelector('.next-button');\n    nextButton.style.visibility = 'hidden';\n  }\n\n  render() {\n    const { questions, actualQuestion, render } = this.state;\n    console.log(questions);\n    return (\n      <div>\n        <Header />\n        <div className=\"container-question-img\">\n          <div />\n          { render && <Question\n            nextQuestion={ this.nextQuestion }\n            question={ questions[actualQuestion] }\n          /> }\n          <div><img className=\"play-img\" src={ play } alt=\"cat\" width=\"400\" /></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  token: state.token,\n});\n\nPlay.propTypes = {\n  token: PropTypes.string.isRequired,\n  history: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps)(Play);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Ranking extends Component {\n  render() {\n    const { history } = this.props;\n    return (\n      <div>\n        <h1 data-testid=\"ranking-title\">Página do ranking</h1>\n        <button\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n          onClick={ () => {\n            history.push('/');\n          } }\n        >\n          Play again\n        </button>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Ranking;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from '../component/Header';\nimport './Feedback.css';\n\nconst assertionsNumber = 3;\n\nexport class Feedback extends Component {\n  render() {\n    const { assertions, score, history } = this.props;\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <div className=\"subcontainer\">\n            <p className=\"feedback-text\" data-testid=\"feedback-text\">\n              {assertions < assertionsNumber ? 'Could be better...' : 'Well Done!'}\n            </p>\n            { assertions < assertionsNumber ? <img src=\"https://media2.giphy.com/media/P53TSsopKicrm/giphy.gif?cid=790b7611669e76b4cb9e2f2c046dbb4aa4ccc5968da1d660&rid=giphy.gif&ct=g\" alt=\"celebrate\" /> : <img src=\"https://media1.giphy.com/media/IwAZ6dvvvaTtdI8SD5/giphy.gif?cid=790b7611e7266ed5cbeeaf4113843a7715de200d81b65b78&rid=giphy.gif&ct=g\" alt=\"celebrate\" /> }\n          </div>\n          <div className=\"main-feedback\">\n            <span>SCORE:</span>\n            <p data-testid=\"feedback-total-score\">{ score }</p>\n            <span>ASSERTIONS:</span>\n            <p data-testid=\"feedback-total-question\">{ assertions }</p>\n          </div>\n          <div className=\"feedback-buttons-container\">\n            <button\n              className=\"feedback-buttons\"\n              type=\"button\"\n              data-testid=\"btn-play-again\"\n              onClick={ () => {\n                history.push('/');\n              } }\n            >\n              Play again\n            </button>\n            <button\n              className=\"feedback-buttons ranking-btn\"\n              type=\"button\"\n              data-testid=\"btn-ranking\"\n              onClick={ () => {\n                history.push('/ranking');\n              } }\n            >\n              Ranking\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  score: state.player.score,\n  assertions: state.player.assertions,\n  name: state.player.name,\n  gravatarEmail: state.player.email,\n});\n\nFeedback.propTypes = {\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Feedback);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport store from './redux/store';\nimport Login from './pages/Login';\nimport Settings from './pages/Settings';\nimport Play from './pages/Play';\nimport Ranking from './pages/Ranking';\nimport Feedback from './pages/Feedback';\n\nexport default function App() {\n  return (\n    <Provider store={ store }>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route exact path=\"/settings\" component={ Settings } />\n          <Route exact path=\"/play\" component={ Play } />\n          <Route exact path=\"/ranking\" component={ Ranking } />\n          <Route exact path=\"/feedback\" component={ Feedback } />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}